import {
	Button,
	Group,
	Modal,
	Stack,
	Text,
} from "@mantine/core";

import { useEffect, useState } from "react";
import { useAuth } from "../../hooks/useAuth";
import { sendFeedback } from "../../services/feedbackService";
import AccessorySelectCardList from "./AccessorySelectCardList";

interface Props {
  opened: boolean;
  onClose: () => void;
  rentId?: number;
}

export default function AccessoryModal({ opened, onClose, rentId }: Props) {
  const { user } = useAuth();
  const [selected, setSelected] = useState<number[]>([]);
  const [submitting, setSubmitting] = useState(false);

  // –û—à–∏–±–∫–∞ –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  const [statusMessage, setStatusMessage] = useState<string | null>(null);
  const [statusColor, setStatusColor] = useState<"red" | "green" | "gray">("gray");

  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
  const [successModalOpen, setSuccessModalOpen] = useState(false);

  useEffect(() => {
    if (!opened) {
      setSelected([]);
      setStatusMessage(null);
      setStatusColor("gray");
      setSuccessModalOpen(false);
    }
  }, [opened]);

  const handleSubmit = async () => {
    if (!user) {
      setStatusMessage("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
      setStatusColor("red");
      return;
    }

    setSubmitting(true);
    setStatusMessage(null);

    const fullName = `${user.last_name} ${user.first_name} ${user.patronymic}`;
    const text = `
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ –∫ –∞—Ä–µ–Ω–¥–µ ‚Ññ${rentId}

üë§ –§–ò–û: ${fullName}
üìß Email: ${user.email}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone_number}
üõ† –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã (ID): ${selected.join(", ") || "‚Äî"}
`.trim();

    try {
      const response = await sendFeedback({
        phoneNumber: user.phone_number,
        text,
      });

      if (!response.error) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É —É—Å–ø–µ—Ö–∞
        setSuccessModalOpen(true);
      } else {
        throw new Error(response.error);
      }
    } catch (error) {
      setStatusMessage("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      setStatusColor("red");
      window.scrollTo({ top: 0, behavior: "smooth" });
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <>
      <Modal opened={opened} onClose={onClose} title="–î–æ–±–∞–≤–∏—Ç—å –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã" size="lg" radius="lg"  centered>
        <Stack gap="md">
          <AccessorySelectCardList
            selectedAccessories={selected}
            onChangeSelected={setSelected}
          />

          {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
          {statusMessage && statusColor === "red" && (
            <Text color={statusColor} size="sm" mt="sm" ta="center">
              {statusMessage}
            </Text>
          )}

          <Group mt="sm" align="end" gap="xs" justify="flex-end">
            <Button variant="default" onClick={onClose} radius="md" disabled={submitting}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button
              onClick={handleSubmit}
              loading={submitting}
							radius="md"
              disabled={selected.length === 0 || submitting}
            >
              –í—ã–±—Ä–∞—Ç—å
            </Button>
          </Group>
        </Stack>
      </Modal>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—Ö–∞ */}
      <Modal
        opened={successModalOpen}
        onClose={() => {
          setSuccessModalOpen(false);
          onClose();
        }}
        title="–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
        centered
        size="sm"
				radius="lg"
        withCloseButton={false}
      >
        <Text>–û—Ç–ª–∏—á–Ω–æ! –°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.</Text>
        <Button fullWidth mt="md" radius="md" onClick={() => {
          setSuccessModalOpen(false);
          onClose();
        }}>
          –ó–∞–∫—Ä—ã—Ç—å
        </Button>
      </Modal>
    </>
  );
}
