import axios from 'axios';
import { BASE_URL } from '../constants';
import type { FeedbackRequest, FeedbackResponse } from "../types/feedback";
import type { User } from "../types/user";

export const sendFeedback = async (data: FeedbackRequest): Promise<FeedbackResponse> => {
	try {
		const response = await axios.post<FeedbackResponse>(BASE_URL + 'api/feedback', {
			phone_number: data.phoneNumber,
			text: data.text
		}, {
			withCredentials: true,
		});

		return response.data;
	} catch (error) {
		console.error('Error sending feedback:', error);

		if (axios.isAxiosError(error)) {
			return {
				message: 'Failed to send feedback',
				error: error.response?.data?.error || error.message,
			};
		}

		return {
			message: 'Failed to send feedback',
			error: error instanceof Error ? error.message : 'Unknown error',
		};
	}
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const sendArrivalNotification = async (user: User): Promise<FeedbackResponse> => {
  const fullName = `${user.last_name} ${user.first_name} ${user.patronymic}`;
  const birthDate = new Date(user.birthday).toLocaleDateString('ru-RU');

  const message = `
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç —É–≤–µ–¥–æ–º–∏—Ç—å –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤.

üë§ –§–ò–û: ${fullName}
üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${birthDate}
üìß Email: ${user.email}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone_number}
üîê –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: ${user.is_verified ? '–î–∞' : '–ù–µ—Ç'}
üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${user.company?.name || '‚Äî'}
`.trim();

  return sendFeedback({
    phoneNumber: user.phone_number,
    text: message,
  });
};